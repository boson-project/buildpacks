#!/bin/sh

set -e

echo "$@"

echo "---> Quarkus Functions Buildpack"

build_dir=$(pwd)
bp_dir=$(cd "$(dirname "$0")"/..; pwd)
layers_dir=$1
platform_dir=$2


mvn_repo_layer="${layers_dir}/mvn_repo"

mkdir -p "${mvn_repo_layer}"
cat <<TOML > "${mvn_repo_layer}.toml"
launch = false
build = true
cache = true
TOML

mvn -B -Dmaven.repo.local="${mvn_repo_layer}" package -DskipTests

# Save Java artifact to temp dir.
# Latter we put it back to the workspace after cleanup.
app_tmp_dir="$(mktemp -d)"

if [ -d "target/quarkus-app" ]; then # fast-jar
  mv target/quarkus-app/lib/ target/quarkus-app/app/ target/quarkus-app/quarkus/ "${app_tmp_dir}/"
  mv target/quarkus-app/quarkus-run.jar "${app_tmp_dir}/app.jar"
else # legacy-jar or uber-jar
  mv target/lib "${app_tmp_dir}/"
  mv target/*-runner.jar "${app_tmp_dir}/app.jar"
fi

# Clean up the build dir.
chmod u+w -R "$build_dir"
rm -fr "${build_dir:?}"/* "${build_dir:?}"/.[a-z]*

# Put the Java artifact back to the workspace.
mv "${app_tmp_dir}"/* "$build_dir"
rm -fr "${app_tmp_dir}"

cat <<TOML > "${layers_dir}/launch.toml"
[[processes]]
type = "web"
command = "JAVA_APP_DIR=\"${build_dir}\" run-java.sh"

[[slices]]
paths = ["lib"]

[[slices]]
paths = ["app.jar"]

[[slices]]
paths = ["app"]

[[slices]]
paths = ["quarkus"]
TOML
